#!/bin/bash -x

# A very basic docker install
exec > /tmp/docker.sh.log 2>&1


DOCKER_VERSION=${docker_version}
INSTALL_DOCKER_COMPOSE=${install_docker_compose}
DOCKER_COMPOSE_VERSION=${docker_compose_version}

function install_docker_ubuntu(){

    # install depepdencies
    apt-get update && \
        apt-get install -y \
        apt-transport-https \
        ca-certificates \
        curl \
        software-properties-common

    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    add-apt-repository -y -u \
       "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
       $(lsb_release -cs) \
       stable"

    apt-get install -y docker-ce=$DOCKER_VERSION
}

function install_docker_centos(){
    yum -y install \
        yum-utils \
        device-mapper-persistent-data \
        lvm2


    cat > /etc/yum.repos.d/docker-ce.repo <<-'EOF'
	[docker-ce-stable]
	name=Docker CE Stable - $basearch
	baseurl=https://download.docker.com/linux/centos/7/$basearch/stable
	enabled=1
	gpgcheck=1
	gpgkey=https://download.docker.com/linux/centos/gpg
	EOF


    docker_version=$(yum list docker-ce --showduplicates|grep $DOCKER_VERSION|sort -r|tail -1|awk '{print $2}'|sed 's/.*://g')

    yum install -y \
        --setopt=obsoletes=0 \
        docker-ce-$docker_version \
        docker-ce-cli-$docker_version \
        containerd.io

    systemctl enable docker && systemctl start docker
}

function install_docker_compose(){
    curl -L "https://github.com/docker/compose/releases/download/$DOCKER_COMPOSE_VERSION/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose && \
    chmod 755 /usr/local/bin/docker-compose
}

# setup the environment
source /root/.bashrc


# install ubuntu is not currently wired up
type docker >/dev/null || install_docker_centos


[ "$INSTALL_DOCKER_COMPOSE" = true ] && (type docker-compose 2>/dev/null || install_docker_compose)


# setup the docker daemon environment
if [ ! -z $HTTP_PROXY ]; then
  mkdir -p /etc/systemd/system/docker.service.d
  cat > /etc/systemd/system/docker.service.d/http-proxy.conf <<EOF
[Service]
Environment="HTTP_PROXY=$HTTP_PROXY" "HTTPS_PROXY=$HTTPS_PROXY" "NO_PROXY=$NO_PROXY"
EOF

  systemctl daemon-reload
  systemctl restart docker
  systemctl show --property=Environment docker

fi
